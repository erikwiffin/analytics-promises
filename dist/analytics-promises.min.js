/*!
 * analytics-promises 0.3.4
 * https://github.com/erikwiffin/analytics-promises
 * 
 * @copyright 2014, Erik Wiffin <erik.wiffin@gmail.com>
 * @license analytics-promises may be freely distributed under the MIT license.
 */
!function(a){var b,c;!function(){var a={},d={};b=function(b,c,d){a[b]={deps:c,callback:d}},c=function(b){function e(a){if("."!==a.charAt(0))return a;for(var c=a.split("/"),d=b.split("/").slice(0,-1),e=0,f=c.length;f>e;e++){var g=c[e];if(".."===g)d.pop();else{if("."===g)continue;d.push(g)}}return d.join("/")}if(d[b])return d[b];if(d[b]={},!a[b])throw new Error("Could not find module "+b);for(var f,g=a[b],h=g.deps,i=g.callback,j=[],k=0,l=h.length;l>k;k++)j.push("exports"===h[k]?f={}:c(e(h[k])));var m=i.apply(this,j);return d[b]=f||m},c.entries=a}(),b("analytics-promises/accounts",["exports"],function(a){"use strict";function b(){var a=new RSVP.Promise(function(a,b){function c(c){c.code?b("There was an error querying accounts: "+c.message):c&&c.items&&c.items.length?a(c.items):b("No accounts found for this user.")}gapi.client.analytics.management.accounts.list().execute(c)});return a}a["default"]=b}),b("analytics-promises/auth",["exports"],function(a){"use strict";function b(a){arguments[1]&&arguments[1].clientId&&arguments[1].apiKey&&(c=arguments[1].clientId,d=arguments[1].apiKey);var b=new RSVP.Promise(function(b,f){function g(a){a?b(this):f(this)}gapi.client.setApiKey(d),gapi.auth.setToken("notasecret"),gapi.auth.authorize({client_id:c,scope:e,immediate:a},g)});return b}var c,d,e="https://www.googleapis.com/auth/analytics.readonly";a["default"]=b}),b("analytics-promises/core",["exports"],function(a){"use strict";function b(a,b){var c=new RSVP.Promise(function(c,d){function e(a){a.code?d("There was an error querying the core reporting api: "+a.message):c(a)}a&&a.id&&(a="ga:"+a.id),b.ids=a,gapi.client.analytics.data.ga.get(b).execute(e)});return c}a["default"]=b}),b("analytics-promises/profiles",["exports"],function(a){"use strict";function b(a){var b=new RSVP.Promise(function(b,c){function d(a){a.code?c("There was an error querying profiles: "+a.message):a&&a.items&&a.items.length?b(a.items):c("No profiles found for this user.")}var e,f;a&&a.accountId&&a.id&&(e=a.accountId,f=a.id),gapi.client.analytics.management.profiles.list({accountId:e,webPropertyId:f}).execute(d)});return b}a["default"]=b}),b("analytics-promises/webProperties",["exports"],function(a){"use strict";function b(a){var b=new RSVP.Promise(function(b,c){function d(a){a.code?c("There was an error querying webProperties: "+a.message):a&&a.items&&a.items.length?b(a.items):c("No webProperties found for this user.")}a&&a.id&&(a=a.id),gapi.client.analytics.management.webproperties.list({accountId:a}).execute(d)});return b}a["default"]=b}),b("analytics-promises",["analytics-promises/auth","analytics-promises/accounts","analytics-promises/webProperties","analytics-promises/profiles","analytics-promises/core","exports"],function(a,b,c,d,e,f){"use strict";function g(){var a=new RSVP.Promise(function(a){function b(){a(this)}gapi.client.load("analytics","v3",b)});return a}function h(a){return m(!0,a).catch(function(){return m(!1)}).then(function(){return g()})}function i(){return n()}function j(a){return o(a)}function k(a){return p(a)}function l(a,b){return q(a,b)}var m=a["default"],n=b["default"],o=c["default"],p=d["default"],q=e["default"];f.init=h,f.accounts=i,f.webProperties=j,f.profiles=k,f.query=l}),a.Analytics=c("analytics-promises")}(window);